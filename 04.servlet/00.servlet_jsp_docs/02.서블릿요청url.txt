
## 웹 자원 요청 URL 형식 

프로토콜://서버IP:포트번호/요청페이지
프로토콜://DNS이름:포트번호/요청페이지

http://192.168.0.100:8080/admin/login.html
http://www.lgcns.com/index.html
http://www.lgcns.com/

## html, jsp 페이지  요청 URL 
http://ip:port/컨텍스트이름/서브폴더명/요청페이지.html
http://ip:port/컨텍스트이름/서브폴더명/요청페이지.jsp

http://127.0.0.1:8080/helloweb/
http://127.0.0.1:8080/helloweb/login.html
http://127.0.0.1:8080/helloweb/admin/customerList.html


## 서블릿 요청 URL ###
	형식 : 
	
	http://서버ip:port/컨텍스트이름/servlet/패키지명.패키지명.요청서블릿클래스
	
	(단)
	-- ROOT 컨텍스트는 컨텍스트이름을 지정하지 않음
	-- .class (확장자)는 포함시키지 않음
	
	
1. ROOT 컨텍스트

http://localhost:8080/servlet/work.controller.test.work.WelcomeServlet
http://localhost:8080/servlet/HelloWorld


2. myshop 컨텍스트 	
http://localhost:8080/myshop/servlet/work.controller.test.work.WelcomeServlet
http://localhost:8080/myshop/servlet/HelloWorld

## 서블릿 클래스 요청 url 단점 ##
1. 너무길어서 불편 (오타..)
2. 보안상의 문제 : 서버의 폴더구조가 url 에 나타남.

## 서블릿 클래스 요청 url 문제에 대한 해결책 ##

	- web.xml 에서 해당 서블릿 요청  url에 대한 환경설정
	
	<web-app>
	
		<servlet>
			<servlet-name>Welcome</servlet-name>
			<servlet-class>work.controller.test.work.WelcomeServlet</servlet-class>
		</servlet>
		
		<servlet-mapping>
			<servlet-name>Welcome</servlet-name>
			<url-pattern>/hi</url-patter>
		</servlet-mapping>
	
	</web-app>

요청url: http://localhost:8080/myshop/hi


## 웹컨텍스트이름 : myshop

http://ip:port/myshop/servlet/work.controller.LoginServlet

단점: 서버위치 표시 => 보안문제, url 오타등 불편, 


## url-pattern mapping 을 통해서 해결 
-- 목적: 보안, 편리성, 유지보수성
-- web.xml, 서블릿 annotation(tomcat 7.0)

http://ip:port/helloweb/login
http://ip:port/helloweb/hello

## form action="요청url" 지정 방식 
1. 서블릿 요청 : 절대경로 지정
	<form method="post" 
		      action="http://127.0.0.1:8080/helloweb/servlet/work.controller.LoginServlet">
		 
2. 서블릿 요청 : 컨텍스트이름 지정     
	<form method="post" 
		      action="/helloweb/servlet/work.controller.LoginServlet">	      

	
3. url-pattern mapping 요청 :
	<form method="post" action="login">

## tomcat 7 ##
-- url pattern 필수 사항
-- 1. web.xml 설정
-- 2. annotation 
	@WebServlet("/login")
	public class LoginServlet extends HttpServlet { }


####  URL 경로설정 ####

1)	url-pattern 이용
	1-1) FORM 
	ACTION = "url-pattern?파라메타명1=값1&파라메타명n=값
	ACTION = "/컨텍스트이름/url-pattern?파라메타명1=값1&파라메타명n=값
	ACTION = "http://서버ip:port/컨텍스트이름/url-pattern?파라메타명1=값1&파라메타명n=값
	
	1-2) JavaScript Event Handling
	onClick="location.href('main.do?action=LIST')"
	onClick="document.location='main.do?action=DELETE&num='+'${requestScope.bookInfo.num}' "
	onClick='document.updateForm.submit()'
	
2) 상대경로명만 가능, 절대경로 사용 불가함
	2-1) 해당 컨텍스트의  다른 폴더에 존재시
	request.getRequestDispatcher("해당컨텍스트의서브폴더명/요청페이지").forward(request, response);
	<jsp:include page="해당컨텍스트의서브폴더명/요청페이지" />
	<jsp:forward page="해당컨텍스트의서브폴더명/요청페이지" />
	
	2-2) 현재 같은 폴더에 존재시
	request.getRequestDispatcher("요청페이지").forward(request, response);
	<jsp:include page="요청페이지" />
	<jsp:forward page="요청페이지" />

3)	해당 컨텍스트의  경로 가져오기 : ( 컨텍스트 이름 예 : myshop )
	3-1) 서블릿  클래스 : ==> "/myshop" 반환
	ServletContext application = getServletContext();
	String contextPath = application.getContextPath(); 			
		
	3-2) JSP 페이지 :
	String contextPath = application.getContextPath(); 
	
4)	해당 컨텍스트의  절대 경로 가져오기 : ( 컨텍스트 이름 예 : myshop )

	3-1) 서블릿  클래스 : ==> "C:\tomcat-6.0.32\webapps\myshop\images\food.gif " 반환		
	ServletContext application = getServletContext();
	String imagePath = application.getRealPath("/images/logo.gif"); 
		
	3-2) JSP 페이지 :
	String imagePath = application.getRealPath("/images/"); 	
	<img src="<%= imagePath %>" + "logo.gif" />

	(주의 : IE 8에서는 절대경로가 정상적으로 이루어지지 않으므로 3번 컨텍스트 패스를 이용)	
				
