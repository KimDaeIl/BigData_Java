
### Inheritance (상속):

1. 목적: 
- 재사용성, 확장성, 유지보수성 향상
- 같은 종류의 객체들의 속성, 기능을 일반화 시켜 설계 (가전제품 <- 테레비, 라디오, 선풍기 등)
- 단일상속만 지원 (다중상속 개념으로 다중 인터페이스 구현 제공)	
- 계층적 상속 구조 : Object <- Super <- Sub


2. 방법: 

- 일반화시켜 모델링 되어 있는 부모클래스를 서브클래스에서 상속 정의
- 자식클래스(sub) 선언 방법 :
	public 서브클래스명 extends 부모클래스명 { }

- 부모클래스의 모든 멤버 상속
- 부모의 private 멤버도 상속은 되나 접근권한 제한으로 자식이 사용못함
- 부모의 생성자는 부모 객체를 생성시에 사용하는것이므로
- 서브클래스의 생성자에서 부모클래스의 생성자를 명시적으로 지정은 가능함
- 서브클래스에서 부모의 생성자 미지정시에는 자동으로 부모의 기본생성자로 생성됨 
- sub " is a " super 관계가 성립되어야만 올바른 부모클래스를 상속한것임
- 잘못하면 "Dog is a Person" 도 될수 있음