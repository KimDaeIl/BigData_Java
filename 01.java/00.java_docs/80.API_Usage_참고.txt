

C:\Program Files\Java\jdk1.8.0_131\jre\lib\ext

## 주요 API ##

## java.lang.Object
- 모든 클래스의 최상위 클래스 (Root Class)
- 명시적으로 상속하지 않아도 자동으로 상속됨
- 모든 객체가 갖어야할 공통 기능으로 모델링
-- 자주 재정의하여 사용하는 메서드
	==> public String toString(){} : 주요 데이터 문자열 반환
	==> public boolean equals(Object obj){} : 같은 객체인지 비교
	==> public int hashCode(){} : 생성한 객체의 참조값 반환

1) + toString() : String
	- 해당 객체의 주요데이터를 String 타입으로 반환하는 메서드 
	- "클래스이름@참조값" 문자열 반환

2) + equals(Object) : boolean
	- 객체가 같은지 비교해서 boolean 타입 반환
	- 같은 객체이면 true  : 즉, 참조값이 같으면 같은 객체 : 참조값1 == 참조값2 
	- 다른 객체이면 false : 즉, 참조값이 다르면 다른 객체 : 참조값1 != 참조값2 
	- 예: Customer 클래스의 인스턴스이면서 아이디 [ 또는 암호, 이름] 정보가 같으면
		같은 객체로 처리하도록 재정의(변경) 사용

3) + hashCode() : int
	- 해당객체의 참조값을 16진수 형식의 int 타입으로 변환하여 반환하는 메서드
	- 사용자가 변경할 수 없는 값 (조회 전용)
	- 즉, hashCode가 같으면 같은 참조값을 의미
	- equals() 메서드를 재정의하게되면 hashCode() 메서드 재정의할것을 권장
	- equals() 메서드에서 재정의시에 사용한 필드의 hashCode() 값에 대해서 xor(^) 값을 리턴 재정의


## Wrapper Class ##

-- 기본형  <--> 객체형 변환 클래스

-- byte -> Byte
-- short -> Short
-- int -> Integer
-- long -> Long
-- float -> Float
-- double -> Double
-- char -> Character
-- boolean -> Boolean


## 자바 문자열 관련 클래스 ##
1. java.lang.String : 
-- 기본형처럼 사용가능하지만 객체타입, 즉, new 없이 사용가능
-- 불변의 문자열(immutable string)
-- 기본형처럼 사용하는 경우에는 heap내부의 literal pool에 생성됨
-- 같은 문자열인 경우에는 pool에 같은 문자열참조
-- JDK1.0

2. java.lang.StringBuffer : new 객체 생성 사용
-- 가변의 문자열(mutable string)
-- 생성때마다 heap area 생성
-- JDK1.0

3. java.lang.StringBuilder 
-- JDK1.5

4. java.util.StringTokenizer
-- 문자열 토큰링


## 날짜 , 형식 관련 클래스 ##
1. java.util.Date, java.util.Calendar,  java.util.GregorianCalendar
2. java.text.SimpleDateFormat
3. java.text.NumberFormat
4. java.text.DecimalFormat


## 형식(format) API
-- java.text.SimpleDateFormat
-- java.text.NumberFormat
-- java.text.Decimalformat
-- java.util.Locale


## java.lang.Math , java.util.Random

## java.lang.System

## java.lang.Properties

## java.util.Enumeration


## Collection API (FrameWork) ##

-- 객체들을 저장관리하기 위한 자료 저장구조
-- java.util.*
-- 크기가 자동으로 추가 증설
-- CRUD(등록, 조회, 변경, 삭제 등) 를 위한 다양한 메서드 제공

-- 종류 :
		1. List 계열 : 순서 있음, 중복 가능 
		2. Set 계열  : 순서 없음, 중복 불가 
		3. Map 계열  : key=value, key 이름은 unique 해야함
		4. Queue (JDK1.5)
		
## List 계열 CRUD 메서드 => ArrayList
	 1) 등록 => add(Object obj) : boolean
	 2) 조회 => get(int index) : Object
	 3) 변경 => set(int index, Object obj) : Object
	 4) 삭제 => remove(int index) : Object , remove(Object) : boolean
	 5) 크기 => size() : int
	 
	 6) 기타 메서드	:	
			전체 저장객체 삭제 => clear() : void
			저장객체 단방향 검색 => iterator() : Iterator
			저장객체 양방향 검색 => listIterator() : ListIterator

			
## Set 계열 CRUD 메서드 => HashSet
	 1) 등록 => add(Object obj) : boolean
	 4) 삭제 => remove(Object) : boolean
	 5) 크기 => size() : int

	 2) 조회 => ?
	 3) 변경 => ?
			 
	 6) 기타 메서드	:
		전체 저장객체 삭제 => clear() : void
		저장객체 단방향 검색 => iterator() : Iterator
			

## Map 계열 CRUD 메서드 => HashMap

	1) 등록 또는 변경  
			=> put(String key, Object value) : Object
			=> 동일한 키가 존재하지 않으면 등록
			=> 동일한 키가 존재하면 변경
			
	2) 조회
			=> get(Object key) : Object  
			
	3) 삭제 
			=> remove(Object key): Object
			
	4) key 목록만 조회
			=> keySet() : Set					
			

## Collection 객체들을 검색하기 위한 API

-- java.util.Iterator : 단방향 검색
	1) 다음존재유무 : hasNext() : boolean
	2) 다음객체 조회 : next() : Object
	3) 객체삭제 : remove(): void
			 
-- java.util.ListIterator : 양방향 검색
	1) 다음존재유무 : hasNext() : boolean
	2) 다음객체 조회 : next() : Object
	3) 객체삭제 : remove(): void
	
	4) 앞에존재유무 : hasPrevious() : boolean
	5) 앞에객체 조회 : previous() : Object
	6) 객체추가 : add(Object obj) : void
	7) 객체변경	: set(Object obj) : void
	
