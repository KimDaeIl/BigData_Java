
/*================================================ */
	
	DDL (Data Definition Languange)
    - 객체 정의 , 변경, 삭제 SQL 구문
    - 객체 : table, view, sequence, index, trigger 등
        
    - 구문 :
    정의: create table 테이블명();
    변경: alter table 테이블명 xxx;
    삭제: drop table 테이블명;

    - SQL 데이터 타입
    1) 문자열
        고정길이 : char(길이지정)
        가변길이 : varchar2(길이지정)
    2) 정수형 : number(숫자길이지정)
    3) 실수형 : number(전체길이, 소수이하길이)
        전체길이에는 소수점, 소수이하길이를 포함한 전체길이
    4) 날짜형: DATE, TIMESTAMP        

## 테이블 생성 : CREATE

    1) 새로운 구조의 테이블 생성
    CREATE TABLE 테이블명 (
        컬럼명1 타입(길이) [제약사항],
        컬럼명N 타입(길이) [제약사항],
	constraint 제약이름 제약사항 expr
    )

   2) 기존 테이블의 구조를 참조한 테이블 생성

   3) 기존 테이블의 구조 및 레코드도 함께 참조한 테이블 생성
	

## 테이블 삭제 : DROP
    DROP TABLE 테이블명;
    DROP TABLE 테이블명 CASCADE CONSTRAINTS;
    

## 테이블 변경 : ALTER
    1) 컬럼, 제약사항 추가
    2) 컬럼, 제약사항 삭제 
    3) 컬럼 변경 : 타입, 길이, 제약
    
	ALTER TABLE 테이블명 ADD (컬럼추가정의);
	ALTER TABLE 테이블명 ADD (CONSTRAINT추가정의);
		ALTER TABLE {table_name} ADD (CONSTRAINT {pk_제약이름} PRIMARY KEY({column_name}));
		ALTER TABLE {table_name} ADD (COLUMN {column_name} {type} {column_name});
	
	ALTER TABLE 테이블명 DROP COLUMN 삭제할컬럼명;
	ALTER TABLE 테이블명 DROP CONSTRAINT 삭제할제약이름;

	ALTER TABLE 테이블명 MODIFY (변경컬럼정의);
	
	col rename
		ALTER TABLE {table_name} RENAME COLUMN {current_col_name} TO {new_col_name};
d

## 제약사항 종류 :
    1. PRIMARY KEY = UNIQUE + NOT NULL
    2. FOREIGN KEY ( NULL 허용,참조 테이블의 PK 이어야함)
    3. NOT NULL : 필수 데이터  ==> 테이블 생성시에만 컬럼정의시에 제약 부여가능
    4. UNIQUE : 중복 불가 , NULL 허용
    5. CHECK  : 값검증
    6. 컬럼 선언시에 기본초기값 설정 방법:
        컬럼명 DEFAULT '기본초기값' [NOT NULL];

## 제약 지정시 제약이름 지정 또는 제약이름 생략
	-- 제약이름 지정방법: constraint 제약이름 제약사항 expr

## 제약 지정 위치 
	-- 1. 컬럼 레벨 : 컬럼명 뒤에 제약지정
	-- 2. 테이블 레벨 : PK 다중컬럼
	-- 3. 테이블 변경시 제약추가 : 테이블 레벨, 컬럼 레벨	
	

## 제약 Data Dictionary : 
	--  테이블 이름 >> user_constraints
	--  CONSTRAINT_NAME,  CONSTRAINT_TYPE, TABLE_NAME

## CONSTRAINT_TYPE
	-- P : PK
	-- R : FK
	-- U : UNIQUE
	-- C : NOT NULL, CHECK

## 제약이름 권장 :  
-- PK_테이블명
-- FK_컬럼명

/*================================================ */

-- 테이블에 대한 제약이름, 제약타입, 테이블명 조회
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS;

-- emp, dept 테이블에 대한 제약이름, 제약타입, 테이블명 조회
SELECT CONSTRAINT_NAME, CONSTRAINT_TYPE, TABLE_NAME
FROM USER_CONSTRAINTS
where table_name in ('EMP', 'DEPT')
order by table_name
;