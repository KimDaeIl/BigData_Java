
1. 기본(필수) 형식
	SELECT * | 컬럼명1 별명, 컬럼명X "Alias" | DISTINCT 컬럼명1, 컬럼명X | 수식
	FROM 테이블명1 별명, 테이블명X 별명
	;

2. 전체 형식
	SELECT 
	FROM
	[ 
		WHERE 조건문 [AND | OR] 조건문X
		GROUP BY 그룹핑할컬럼명1, 그룹핑할컬럼명X
		HAVING 그룹핑한결과에대한조건문
		ORDER BY 정렬컬럼명 정렬방법, 정렬컬럼명X 
	]
	;

	-- 컬럼별명
	1) 컬럼명 뒤에 공백구분자 표기 ==> 컬럼명 alias명, 컬럼명 "alias 명"
	2) 별명에 대소문자구분, 공백, 특수문자가 있으면 "별명"
	3) 별명에 ""(쌍따옴표) 생략 => 컬럼명대신에 대문자표기 제목 출력
	4) 조회시에 제목으로 출력, 정렬시에 사용

	-- 정렬방법: 
	1) 올림차순(기본, ASC, 생략가능)
	2) 내림차순(DESC)

	-- 정렬컬럼 지정방법
	1) 컬럼명
	2) 수식
	3) 컬럼에 대한 별명
	4) 조회컬럼에 대한 인덱스번호 : 인덱스번호 1번부터 시작
	5) 형식 : order by 정렬컬럼명 정렬방법지정 [, 정렬컬럼명 정렬방법지정]


	-- 정렬기준 :  A~Z, 0~9, 가~하, 날짜 (숫자와 동일 => 2014/01/01 , 2014/12/25)	


	-- null 에 대한 정렬 조회
	1) asc   :  작은값 -> 큰값 -> null
	2) desc :  null -> 큰값 -> 작은값


	-- 값 표현방법
	1) 문자, 날짜 ==> '문자', '날짜'
	2) 숫자 ==> 1234
	3) 값을 비교할때는 대소문자 구분
	
	-- DUAL 테이블 : 
	1) SELECT 필수 구문을 위한 빈테이블
	2) SELECT ~ FROM DUAL;

	-- 검색 처리 순서
        1) FROM => 2) WHERE => 3) GROUP BY => 4) HAVING => 5) SELECT => 6) ORDER BY


## 연산자
-- 산술연산자 : + - * /
-- 비교연산자 : =, !=, <>, <, <=, >=, >
-- 논리연산자 : AND, OR, NOT

-- SQL연산자 : where 컬럼명 연산자
	BETWEEN a AND b, 
	LIKE  => %(모든데이터) ,  _ (단일데이터)
	IN, NOT IN, 

	IS NULL, IS NOT NULL, 
	EXISTS(sub-query) , NOT EXISTS(sub-query)


### where 조건 검색

형식: select ~ from ~ where 조건문1 [AND | OR 조건문X]
조건문형식 :  컬럼명 연산자 값 또는 수식

(주의:)
-- 문자열과 날짜는 '문자열', '날짜데이터'
-- 비교문자열값은 대소문자 구분
